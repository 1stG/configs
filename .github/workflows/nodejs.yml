name: Node CI

on: [push, pull_request]

jobs:
  default:
    strategy:
      matrix:
        node: [10, 12, 14]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # for lerna

      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}

      - name: Link Yarn global binaries into PATH
        run: echo "$(yarn global bin)" >> $GITHUB_PATH

      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ matrix.node }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ matrix.node }}-yarn-

      - name: Install Dependencies
        run: yarn --frozen-lockfile
        env:
          CI: 'true'

      - name: Build, Lint and Test
        run: |
          yarn run check
          yarn browserslist
          yarn lint
          yarn test
        env:
          EFF_NO_LINK_RULES: 'true'
          PARSER_NO_WATCH: 'true'

      - name: Check Postcss
        run: |
          yarn global add postcss postcss-cli
          NODE_ENV=production postcss tests/test.css --verbose

      - name: Codecov
        run: |
          yarn global add codecov
          codecov
          bash <(curl -Ls https://coverage.codacy.com/get.sh)
        env:
          CI: 'true'
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
          CODACY_ACCOUNT_TOKEN: ${{ secrets.CODACY_ACCOUNT_TOKEN }}
          CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}

      - name: Code Checks
        if: github.event_name == 'push'
        run: |
          yarn global add @codechecks/client @codechecks/build-size-watcher typecov typescript
          codechecks
        env:
          CI: 'true'
          CC_SECRET: ${{ secrets.CC_SECRET }}

      - name: Publish GitHub Release and npm Package
        if: matrix.node == 14 && github.event_name == 'push' && github.ref	== 'refs/heads/master'
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          npm set //registry.npmjs.org/:_authToken $NPM_TOKEN
          yarn lerna publish --conventional-commits --create-release github --yes
        env:
          CI: 'true'
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
