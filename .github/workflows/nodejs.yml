name: Node CI

on: [push, pull_request]

jobs:
  default:
    strategy:
      matrix:
        node: [10, 12]
        os: [macOS-latest, ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@master

      - uses: actions/setup-node@master
        with:
          node-version: ${{ matrix.node }}

      - name: Setup yarn
        run: |
          curl -o- -L https://yarnpkg.com/install.sh | bash
          export PATH="$HOME/.yarn/bin:$PATH"

      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ matrix.os }}-${{ matrix.node }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ matrix.os }}-${{ matrix.node }}-yarn-

      - name: Install Dependencies
        run: yarn --frozen-lockfile
        env:
          CI: 'true'

      - name: Build, Lint and Test
        run: |
          yarn run check
          yarn browserslist
          yarn lint
          yarn test
        env:
          EFF_NO_LINK_RULES: 'true'
          PARSER_NO_WATCH: 'true'

      - name: Check Postcss
        if: matrix.os == 'macOS-latest'
        run: |
          yarn global add postcss-cli
          NODE_ENV=production postcss tests/test.css --verbose

      # - name: Codecov
      #   if: matrix.os == 'macOS-latest'
      #   run: |
      #     yarn global add codecov codacy-coverage
      #     codecov
      #     cat ./coverage/lcov.info | codacy-coverage -u 1stG -n configs
      #   env:
      #     CI: 'true'
      #     CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      #     CODACY_ACCOUNT_TOKEN: ${{ secrets.CODACY_ACCOUNT_TOKEN }}
      #     CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}

      - name: Code Checks
        if: matrix.os == 'macOS-latest' && github.event_name == 'push'
        run: |
          yarn global add @codechecks/client @codechecks/build-size-watcher @codechecks/type-coverage-watcher typescript
          codechecks
        env:
          CI: 'true'
          CC_SECRET: ${{ secrets.CC_SECRET }}

      - name: Publish GitHub Release and npm Package
        if: matrix.node == 12 && matrix.os == 'macOS-latest' && github.event_name == 'push' && github.ref	== 'refs/heads/master'
        run: |
          git remote set-url origin "https://$GITHUB_ACTOR:$GH_TOKEN@github.com/$GITHUB_REPOSITORY.git"
          git checkout master
          npm set //registry.npmjs.org/:_authToken $NPM_TOKEN
          yarn lerna publish --create-release github --yes
        env:
          CI: 'true'
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish beta npm Package
        if: matrix.node == 12 && matrix.os == 'macOS-latest' && github.event_name == 'push' && github.ref	== 'refs/heads/develop'
        run: |
          npm set //registry.npmjs.org/:_authToken $NPM_TOKEN
          yarn lerna publish --canary --conventional-prerelease --force-publish --preid beta --pre-dist-tag beta --yes
        env:
          CI: 'true'
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
